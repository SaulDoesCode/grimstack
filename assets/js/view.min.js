import app from"/js/site.min.js";import route from"/js/router.min.js";const d=app.d,df=d.domfn,{div:div,h4:h4,section:section,span:span,header:header}=df,mainView=d.query("main[route-active]"),contentDisplay=df.section({class:"posts"});app.postDisplay=df.section({class:"full post"},t=>{t.parts=d.h`
        <header class="post-header">
            <div>
                <h3 class="post-title" ref="title"></h3>
                <div class="author-name" ref="author"></div>
                <div> ‚óè </div>
                <div class="posted" ref="date"></div>
                <div class="tags" ref="tags"></div>
            </div>
        </header>
    
        <article class="content" ref="content"></article>

        <aside class="post-comments" hidden ref="commentContainer">
            <header>Comments</header>
            <div ref="commentMaker"></div>
            <div ref="comments"></div>
        </aside>
    `.renderCollect(t)}),route("posts",contentDisplay),""!=location.hash&&"#"!=location.hash||(location.hash="posts"),route("post",app.postDisplay),d.run(async()=>{try{await app.loadScriptsThenRunSequentially(!0,"https://cdnjs.cloudflare.com/ajax/libs/dayjs/1.8.36/dayjs.min.js","https://cdnjs.cloudflare.com/ajax/libs/dayjs/1.8.36/plugin/utc.min.js","https://cdnjs.cloudflare.com/ajax/libs/dayjs/1.8.36/plugin/relativeTime.min.js"),window.dayjs.extend(window.dayjs_plugin_utc),window.dayjs.extend(window.dayjs_plugin_relativeTime),dayjs().utcOffset(2),app.emit("dayjsLoaded",app.dayjsLoaded=!0)}catch(t){}});const postNavView=d.html('\n    <nav class="post-nav">\n        <button class="post-back-btn" onclick="location.hash = app.fancyHash || \'posts\'">\n           ü°Ñ Back to Post List\n        </button>\n    </nav>\n');route.on.post(async t=>{await app.afterPostsInitialization();const e=app.activePost=app.posts[t],{title:a,tags:s,author:n,date:o,content:i,comments:p,commentsContainer:r}=app.postDisplay.parts;a.textContent=e.title,o.innerHTML="",d.render(app.renderUXTimestamp(e.posted),o),s.innerHTML="",e.tags.map(t=>df.span({$:s,attr:{title:t},class:"tag"},t)),n.textContent="By "+e.author_name,i.innerHTML="Content loading...",df.prepend(mainView,postNavView);const c=await app.fetchPostContent(e.id);i.innerHTML="",e==app.activePost&&(d.render(d.html(c),i),setTimeout(()=>d.queryAll(".content code",i).forEach(t=>{t.classList.add("language-rust")}),60)),app.emit.postRendered(e,t)}),app.view={page:0},app.votesUI=(t,{id:e,vote:a,you_voted:s})=>n=>{const o=div({class:"votes",async onclick(n,o){if(null==app.user){n.preventDefault(),app.oneTimeAuthLauncher.off();try{app.authViewToggle?app.authViewToggle.toggleView():await import("/js/auth.min.js")}catch(n){app.oneTimeAuthLauncher.on()}return}const i=n.target.classList.contains("up"),p=n.target.classList.contains("down");if(!p&&!i)return;n.target.classList.add("await-vote");const r=n.target.classList.contains("selected");if(null!=s&&r){const i=await app.vote(t,e);0!=i&&(o.downvote.classList.remove("selected"),o.upvote.classList.remove("selected"),n.target.classList.remove("await-vote"),app.formatVoteCount(o.voteCount,a=i.data),s=null)}else if(i){const i=await app.vote(t,e,!0);0!=i&&(o.downvote.classList.remove("selected"),o.upvote.classList.add("selected"),n.target.classList.remove("await-vote"),app.formatVoteCount(o.voteCount,a=i.data),s=!0)}else if(p){const i=await app.vote(t,e,!1);0!=i&&(o.upvote.classList.remove("selected"),o.downvote.classList.add("selected"),n.target.classList.remove("await-vote"),app.formatVoteCount(o.voteCount,a=i.data),s=!1)}}});return o.append(o.upvote=span({class:{up:!0,vote:!0,selected:!0===s}}),o.voteCount=span({class:"vote-count"},a),o.downvote=span({class:{down:!0,vote:!0,selected:!1===s}})),o};const publicPost=t=>div({$:contentDisplay,class:"post",attr:{pid:t.id},onclick(e,a){e.target.className.includes("vote")||(location.hash=t.id)}},app.votesUI("writ",t),header(div({class:"title"},h4(t.title),div({class:"author-name"},"By "+t.author_name)),div(div({class:"posted"},app.renderUXTimestamp(t.posted)),div({class:"tags"},t.tags.map(t=>{const e=t.length>11;return span({class:{tag:!0,small:e},attr:{title:t}},t)})))));app.formatVoteCount=(t,e,a=2)=>{t.innerHTML="";let s=app.abreviateNum(e,a);if("string"==typeof s&&s.includes(".")){const t=s[s.length-1];s=s.substring(0,s.length-1);const[e,a]=s.split(".");s=[span(e),".",span({class:"endbits"},a),span({class:"marker"},t)]}d.render(s,t)},app.fetchPostContent=async t=>{if(app.posts[t]&&null!=app.posts[t].content)return app.posts[t].content;const e=await fetch("/post-content/"+t),a=await e.json();if(!a.ok)throw new Error(a.status);return app.posts[t].content=a.data},app.posts=Object.create(null),app.writQuery({with_content:!1,kind:"post"}).then(async t=>{if(!d.isArr(t))return console.error(t);t.forEach(t=>publicPost(app.posts[t.id]=t)),app.emit.postsInitialized(app.postsInitialized=!0),app.loadStyle("https://cdnjs.cloudflare.com/ajax/libs/prism/1.21.0/themes/prism-tomorrow.min.css",!0),await import("/js/comments.min.js")}),app.afterPostsInitialization=t=>app.postsInitialized?null!=t?t():Promise.resolve(!0):null!=t?app.once.postsInitialized(t):new Promise(t=>app.once.postsInitialized(t)),app.dateFormat="HH:mm a DD MMM YYYY",app.dayjsUXTSformat=t=>{const e=dayjs.unix(t).utcOffset(2);return e.format(app.dateFormat)+" | "+e.fromNow()},app.renderUXTimestamp=(t,e=app.dayjsUXTSformat,a)=>{null==a&&(a=d.txt());try{a.textContent=e(t),(a.textContent.includes("minute")||a.textContent.includes("hour"))&&(a.updateInterval=setInterval((function s(){a.textContent=e(t),document.contains(a)?a.textContent.includes("hour")&&(clearInterval(a.updateInterval),a.updateInterval=setInterval(s,36e5)):clearInterval(a.updateInterval)}),6e4))}catch(s){a.textContent=new Date(1e3*t).toLocaleString(),app.once.dayjsLoaded(()=>app.renderUXTimestamp(t,e,a))}return a},app.vote=async(t,e,a)=>{try{const s=await fetch(`/${t}/${e}/${null==a?"unvote":a?"upvote":"downvote"}`);return await s.json()}catch(t){console.error("app.voteWrit error: ",t)}return!1};
//# sourceMappingURL=view.min.js.map