import domlib from"/js/domlib.min.js";const app=domlib.emitter(),d=app.d=domlib,df=domlib.domfn,jsonHTTPMethod=t=>(e,o,a={})=>fetch(e,{method:t,headers:{"Content-Type":"application/json"},body:JSON.stringify(o),...a});app.jsonPost=jsonHTTPMethod("POST"),app.jsonPut=jsonHTTPMethod("PUT"),app.jsonDelete=jsonHTTPMethod("DELETE");const wq=t=>async(e={})=>{isNaN(e.page)&&(e.page=1),e.kind||(e.kind="post");const o=await app.jsonPost(t,e);return await o.json()};app.writQuery=wq("/writs"),app.editableWritQuery=wq("/editable-writs"),app.toggleSituations={list:[],active:null},app.setupToggleSituation=(t,e,o="body",{viewOutAnimation:a,delayRemoveMS:n}={})=>{const i={};return i.clickOutHandler=d.on.pointerdown(document.body,o=>{o.target!=e&&!e.contains(o.target)&&df.hasClass(e,"open")&&o.target!=t&&(o.preventDefault(),i.toggleView(!1),i.clickOutHandler.off())}).off(),i.launchEventHandler=d.on.pointerdown(t,t=>{t.preventDefault(),i.toggleView()}),i.toggleView=(p=!df.hasClass(e,"open"))=>{df.class(e,"open",p),df.class(t,"active",p),p?(d.render(e,o),i.clickOutHandler.on(),app.toggleSituations.active&&app.toggleSituations.active.toggleView(!1),app.toggleSituations.active=i):(app.toggleSituations.active==i&&(app.toggleSituations.active=null),null!=n?(e.style.animation=a,i.launchEventHandler.off(),df.remove(e,n).then(()=>{e.style.animation="",i.launchEventHandler.on()})):df.remove(e))},app.toggleSituations.list.push(i),i},window.app=app;export default app;