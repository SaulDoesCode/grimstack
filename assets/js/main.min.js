const app={writs:[]},jsonPost=app.jsonPost=(t,n)=>fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}),jsonPut=app.jsonPut=(t,n)=>fetch(t,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});app.writQuery=(t={})=>new Promise((n,e)=>{isNaN(t.page)&&(t.page=1),t.kind||(t.kind="post"),jsonPost("/writs",t).then(t=>t.json().then(n))}),app.pushWrit=(t,n,e=["musings"],o={})=>new Promise((i,a)=>{const s={title:t,raw_content:n.trim(),tags:e,kind:"post",public:!0,viewable_by:[]};Object.assign(s,o),jsonPut("/writ",s).then(t=>t.json()).then(t=>t.ok?i(t.data):a(t))}),app.wq=(t=1)=>fetch("/writs",{method:"POST",headers:{"Content-Type":"application/json"},body:`{"page":${t},"kind":"post"}`});const pw=()=>app.pushWrit("Second Writ","\n** ain't this some shiiit.. **    \nfirst writ of many that came before\n".trim(),["testing","development"]),putComment=({parent_id:t="post:0:0",writ_id:n="post:0:0",raw_content:e="This is a comment, and it's even unique nogal, see: "+Math.round(100*Math.random())+Math.round(100*Math.random())+".",author_only:o=!1}={})=>new Promise((i,a)=>{jsonPut("/comment",{parent_id:t,writ_id:n,raw_content:e,author_only:o}).then(t=>{t.ok&&t.json().then(i).catch(t=>{a(new Error("no good, the json was invalid"))})}).catch(t=>{a(new Error("no good, it didn't work"))})}),getComments=async(t={},n)=>{null==t.path&&(t.path="post:0:0/"),null==t.page&&(t.page=1);const e=JSON.stringify(t);if("number"!=typeof n)return await fetch("/comments",{method:"POST",headers:{"Content-Type":"application/json"},body:e});for(let t=n;t-- >0;)await fetch("/comments",{method:"POST",headers:{"Content-Type":"application/json"},body:e})},commentRecursively=async(t,n,e=n)=>0==t--||commentRecursively(t,(await putComment({parent_id:n,writ_id:e})).data.id,e),defSetup=async(t=10,n)=>{const e=await app.pushWrit("Second Writ","\n** ain't this some shiiit.. **    \nfirst writ of many that came before\n".trim(),["testing","development"]),o=[];for(;t-- >0;)o.push(commentRecursively(9,e.id,e.id));await Promise.all(o),await getComments({path:e.id+"/"},n)};