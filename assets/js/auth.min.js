import app from"/js/site.min.js";import d from"/js/domlib.min.js";const df=d.domfn,authLauncher=d.query(".auth-launcher"),{authView:authView,usernameInput:usernameInput,passwordInput:passwordInput}=d.h`
<section class="auth-view" ref="authView">
  <div>
    <div class="auth-form-field">
      <label for="auth-username">Username</label>
      <input type="text" name="username" id="auth-username" ref="usernameInput">
      <label for="auth-pwd">Password</label>
      <input type="password" name="password" id="auth-pwd" ref="passwordInput">
    </div>
    <button class="submit" onclick="() => app.authenticate()">authenticate</button>
  </div>
</section>`.collect();app.authView=authView,app.authViewToggle=(a=!df.hasClass(authView,"open"))=>(df.class(authView,"open",a),df.class(authLauncher,"active",a),a?(d.render(authView),clickOutHandler.on()):df.remove(authView),a);const clickOutHandler=d.on.click(document.body,a=>{a.target!=authView&&!authView.contains(a.target)&&df.hasClass(authView,"open")&&a.target!=authLauncher&&(a.preventDefault(),app.authViewToggle(!1),clickOutHandler.off())}).off();d.on.click(authLauncher,app.clickAuthLauncher=a=>{a.preventDefault(),app.authViewToggle()}),app.authenticate=(a=usernameInput.value.trim(),e=passwordInput.value.trim())=>{if(""==a)throw new Error("username is invalid");if(""==e)throw new Error("password is invalid");app.jsonPost("/auth",{username:a,password:e}).then(a=>a.json()).then(a=>{console.log(a),a.ok&&location.reload()})};