import app from"/js/site.min.js";const d=app.d,df=d.domfn,authLauncher=d.query(".auth-launcher"),{authView:authView,usernameInput:usernameInput,emailInput:emailInput,authBtn:authBtn}=d.h`
<section class="auth-view" ref="authView">
  <div>
    <div class="auth-form-field">
      <label for="auth-username">Username</label>
      <input type="text" name="username" id="auth-username" ref="usernameInput">
      <label for="auth-email">Email</label>
      <input type="text" name="email" id="auth-email" ref="emailInput">
    </div>
    <button class="submit" ref="authBtn">authenticate</button>
  </div>
</section>`.collect();app.authViewToggle=app.setupToggleSituation(authLauncher,app.authView=authView),app.authenticate=async(t=usernameInput.value.trim(),a=emailInput.value.trim())=>{if(""==t)throw new Error("username is invalid");if(""==a||!a.includes("@"))throw new Error("email is invalid");console.log("attempting authentication...");const e=await app.jsonPost("/auth",{username:t,email:a}),n=await e.json();if(console.log(n),n.ok)return app.toast.msg("auth went through: "+n.status),!0;throw app.toast.error("auth failed: "+n.status),new Error("authentication failed: "+n.status)};const authClickHandle=d.once.click(authBtn,async t=>{try{await app.authenticate()}catch(t){console.error(t),authClickHandle.on()}});app.authViewToggle.toggleView();
//# sourceMappingURL=auth.min.js.map