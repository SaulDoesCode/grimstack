import domlib from"/js/domlib.min.js";const{emitter:emitter,domfn:domfn,directive:directive,run:run,isRenderable:isRenderable,isFunc:isFunc}=domlib,route=emitter((e,t,o)=>{if(null!=o&&e.replace(o,""),"#"!==e[0]&&(e="#"+e),null==t)return location.hash=e;"TEMPLATE"===t.tagName&&(t.remove(),t=[...t.content.childNodes]),isFunc(t)&&(t=t()),(isRenderable(t)||isFunc(t))&&(views[e]=t),route.handle()}),views=route.views=Object.create(null);route.hash=(e=location.hash)=>e.replace("#",""),directive("route-link",{init(e,t){if("A"!==e.tagName)throw new Error("route-link is meant for actual a[href] link elements");e.routeLink=route.on.change(()=>e.classList.toggle("active-route",location.hash===(e.href="#"+e.getAttribute("route-link")))),e.classList.toggle("active-route",location.hash===(e.href="#"+t))},remove:(e,t)=>e.routeLink.off()}),directive("route",{init(e,t){if("TEMPLATE"===e.tagName)return route(t,e);if("TEMPLATE-FILE"===e.tagName)try{"#"!==t[0]&&(t="#"+t),fetch(e.getAttribute("src")).then(e=>e.text()).then(e=>route(t,()=>()=>route.views[t]=domlib.html(e))),domlib.domfn.remove(e)}catch(e){return void console.error(`invalid <template-file route="${t}" src="???">`,e)}e.routeHandler=route.on.change((t,o)=>{o===e.getAttribute("route")?(e.innerHTML="",domfn.append(e,domfn.html(t))):e.textContent=""})},remove(e,t){e.routeHandler&&(e.routeHandler.off(),e.textContent="")}}),directive("route-active",{init(e,t){e.routeHandler=route.on.change((t,o)=>{e.setAttribute("route-active",o),e.innerHTML="",domfn.append(e,domlib.html(t))}),e.routeOffHandler=route.on.off(t=>{e.innerHTML=route.view404(t)})},remove(e,t){e.routeHandler.off(),e.textContent=""}}),route.view404=e=>`<br><header>404 - ${e} | No view for this route</header>`,domlib.route=route,route.handle=()=>{if(route.wasReset&&route.path==location.hash)return;if(null!=route.path&&route.path==location.hash)return;let e=location.hash;e.includes("/")&&(e=e.split("/")[0]),e.includes(":")&&(e=e.split(":")[0]);let t=route.views[e];const o=route.hash();if(isFunc(t)&&(t=t()),null==t)return null!=route.path?(location.hash=route.path,void(route.wasReset=!0)):void route.emit.off(o);route.lastPath=route.path,route.path=location.hash,route.active=t,route.emit.change(t,o,route),route.emit[o](t,route),route.emit[e.slice(1)](o,t,route)},route.whenActive=(e,t,o)=>run(()=>{"#"!==e[0]&&(e="#"+e);let r=route.views[e];location.hash===e&&null!=r&&(t(r,route,e),o)||(e=route.hash(e),route[o?"once":"on"][e](o=>{t(o,route,e)}))}),window.addEventListener("hashchange",route.handle),run(()=>{route.handle(),window.dispatchEvent(new window.CustomEvent("routerReady"))});export default route;
//# sourceMappingURL=router.min.js.map